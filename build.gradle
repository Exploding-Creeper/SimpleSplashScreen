buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
    id "me.hypherionmc.cursegradle" version "2.0.1"
    id "com.modrinth.minotaur" version "2.+"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'signing'

var baseVersion = project.modversion

group = 'me.hypherionmc'
version = baseVersion + (project.modversion_patch != "0" ? ".${project.modversion_patch}" : "")
archivesBaseName = "SimpleSplashScreen-${project.minecraft_version}"

// Jenkins
if (System.getenv('BUILD_NUMBER') != null) {
    version = baseVersion + "." + System.getenv('BUILD_NUMBER') + "d"
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '17'

minecraft {
    mappings channel: 'official', version: minecraft_version
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=simplesplashscreen.mixins.json"
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                simplesplashscreen {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                simplesplashscreen {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'simplesplashscreen', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                simplesplashscreen {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven {
        name = 'Sponge / Mixin'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation(fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_version}"))
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "simplesplashscreen",
                "Specification-Vendor"    : "HypherionSA",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "HypherionSA",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "simplesplashscreen.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

mixin {
    add sourceSets.main, "simplesplashscreen.refmap.json"
}

if (System.getProperty("idea.sync.active") == "true") {
    afterEvaluate {
        tasks.withType(JavaCompile).all {
            it.options.annotationProcessorPath = files()
        }
    }
}

modrinth {
    debugMode = false
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "4uhcFYch"
    versionNumber = "${minecraft_version}-${project.version}"
    versionType = "release"
    changelog = rootProject.file("changelog.md").text.trim()
    uploadFile = jar
    versionName = "Simple Splash Screen ${project.version}"
    gameVersions = ["1.19"]
    loaders = [ "forge" ]
    dependencies {
        required.project "9s6osm5g"
    }
}

curseforge {
    if (System.getenv("CURSE_TOKEN") != null) {
        apiKey = System.getenv("CURSE_TOKEN")
    } else {
        apiKey = ""
    }
    project {
        id = "503390"
        releaseType = "release"
        addGameVersion "1.19"
        addGameVersion "Forge"
        addGameVersion "Java 17"
        changelogType = "markdown"
        changelog = rootProject.file("changelog.md")
        mainArtifact(jar) {
            displayName = "Simple Splash Screen ${project.version}"
        }
        relations {
            requiredDependency 'cloth-config'
        }
    }
    options {
        forgeGradleIntegration = false
        debug = false
    }
}

afterEvaluate {
    tasks.curseforge503390.dependsOn reobfJar
}
